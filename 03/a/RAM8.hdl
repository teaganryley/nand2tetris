/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=regA, b=regB, c=regC, d=regD, e=regE, f=regF, g=regG, h=regH);
    
    Register(in=in, load=regA, out=outA);
    Register(in=in, load=regB, out=outB);
    Register(in=in, load=regC, out=outC);
    Register(in=in, load=regD, out=outD);
    Register(in=in, load=regE, out=outE);
    Register(in=in, load=regF, out=outF);
    Register(in=in, load=regG, out=outG);
    Register(in=in, load=regH, out=outH);

    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address, out=out);
}